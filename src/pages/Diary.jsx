import React, { useState } from 'react';
import { Link } from 'react-router-dom';
import '../sass/scss/diary.scss';

const formatDate = (dateString) => {
  const options = { year: 'numeric', month: 'short', day: '2-digit' };
  const date = new Date(dateString);
  return date.toLocaleDateString('en-US', options).replace(/,/, '').replace(/(\w+) (\d+) (\d+)/, '$1, $2 $3');
};
// ÂàùÂßãÁöÑÊñáÁ´†Ë≥áÊñôÈô£Âàó
const initialPosts = [
  {
    id: 1,
    author: 'Eddie Chen',
    title: '‰ªäÂ§©ÂíåÊñ∞ÊúãÂèã‰∏ÄËµ∑ÂêÉ‰∫ÜÂíñÂì©È£Øüçõ',
    content: '‰æÜÂ§ßÈò™‰∏ÄÈÄ±ÔºåÁµÇÊñºÈºìËµ∑ÂãáÊ∞£Âú®Âπ≥Âè∞‰∏äÁôº‰∫Ü‰∏ÄÂÄãÂêÉÈ£ØÊè™Âúò„ÄÇÂéüÊú¨‰ª•ÁÇ∫ÂèØËÉΩÊ≤í‰∫∫ÂõûÊáâÔºåÁµêÊûúÂ±ÖÁÑ∂ÊúâÂÖ©‰ΩçÂêåÊ®£Âú®ÈÄôË£°ÊºÇÊ≥äÁöÑÊúãÂèãÂõûÊàëË®äÊÅØ„ÄÇ‰∏ÄÂÄãÊòØÂâõÂæûÊù±‰∫¨‰æÜÁöÑÂ∑•Á®ãÂ∏´ÔºåÂè¶‰∏Ä‰ΩçÊòØÁï´ÊèíÁï´ÁöÑËá™Áî±Êé•Ê°àËÄÖ„ÄÇÊàëÂÄëÁ¥ÑÂú®‰∏ÄÈñìÂÆ∂Â∫≠ÂºèÁöÑÂ∞èÂíñÂì©Â∫óË¶ãÈù¢ÔºåÂæûÈªûÈ§êÈñãÂßãÂ∞±Ë©±È°å‰∏çÊñ∑ÔºåÈÇäÂêÉÈÇäÁ¨ëÔºåÂàÜ‰∫´ÂêÑËá™ÁöÑÊóÖÁ®ãÂíå„Äå‰∏ÄÂÄã‰∫∫ÂêÉÈ£Ø„ÄçÁöÑÂ∞∑Â∞¨Áû¨Èñì„ÄÇ\nÂêÉÂÆåÊàëÂÄëÈÇÑËµ∞ÂéªÈôÑËøëÁöÑÊ≤≥ÈÇäÊï£Ê≠•Ôºå‰∏ÄËµ∑Êãç‰∫ÜÂêàÁÖß„ÄÇÊàëÁ™ÅÁÑ∂ÁêÜËß£‰∫Ü‰ªÄÈ∫ºÂè´„Äå‰∏ÄËµ∑Â∞±ÊúâË∂£„ÄçÔºåÈÇ£‰∏çÂè™ÊòØÈô™‰º¥ÔºåËÄåÊòØ‰∏ÄÁ®ÆÈªòÂ•ëÁöÑÊâìÈñãÔºåËÆì‰∫∫ÁîüÂú®Áï∞Âú∞‰πüËÉΩÊúâ‰∫õÊ∫´Â∫¶„ÄÇ',
    imgSrc: './img-diary/diary-1.jpg',
    location: 'Â§ßÈò™/ Êó•Êú¨',
    date: 'Apr,03 2025',
    liked: false
  },
  {
    id: 2,
    author: 'Amy Wu',
    title: 'üßë‚Äçüíª Á¨¨‰∏ÄÊ¨°Âú®ÂúãÂ§ñ co-workÔºåÁ´üÁÑ∂ÊúâÈªûÊÑüÂãï',
    content: 'Êàë‰∏ÄÁõ¥Ë¶∫ÂæóËá™Â∑±ÊòØÈÇ£Á®ÆÂèØ‰ª•‰∏ÄÂÄã‰∫∫Â•ΩÂ•ΩÂ∑•‰ΩúÁöÑ‰∫∫Ôºå‰∏çÈúÄË¶ÅÂ§™Â§öÁ§æ‰∫§„ÄÇ‰ΩÜ‰ªäÂ§©Âú®Ê∏ÖÈÇÅÁöÑ‰∏ÄÂÆ∂ÂíñÂï°Âª≥Áôº‰∫Ü co-work Êè™ÂúòÔºå‰æÜ‰∫Ü‰∏âÂÄã‰∫∫ÔºåÊúâË®≠Ë®àÂ∏´„ÄÅÂ∑•Á®ãÂ∏´„ÄÅÈÇÑÊúâ‰∏Ä‰ΩçÂú®ÂØ´Ë´ñÊñáÁöÑÂ≠∏Áîü„ÄÇ\nÊàëÂÄëÊ≤íÂ§öË™™Ë©±ÔºåÂêÑËá™Êà¥‰∏äËÄ≥Ê©ü„ÄÅÊâìÈñãÈõªËÖ¶ÔºåÂ∞±ÈñãÂßã‰∫Ü‰∏ÄÊï¥ÂÄã‰∏ãÂçàÁöÑÂÆâÈùúÂ∑•‰Ωú„ÄÇ‰ΩÜÈÇ£Á®Æ„ÄåË∫´ÈÇäÊúâ‰∫∫‰πüÂú®Âä™Âäõ„ÄçÁöÑÊÑüË¶∫ÔºåÁúüÁöÑÊúâ‰∏ÄÁ®ÆËé´ÂêçÁöÑÂÆâÂÆöÊÑü„ÄÇ‰∏≠Èñì‰∏ÄËµ∑Èªû‰∫ÜÈ£≤ÊñôÔºåËÅä‰∫ÜÂπæÂè•Â∑•‰ΩúÈÅáÂà∞ÁöÑÈõ£È°åÔºåÁ™ÅÁÑ∂Ë¶∫ÂæóËá™Â∑±‰∏çÈÇ£È∫ºÂ≠§ÂñÆ„ÄÇ\nÁµêÊùüÂâçÊàëÂÄë‰∫íÂä†‰∫ÜËÅØÁµ°ÊñπÂºèÔºå‰∏ãÈÄ±Ê±∫ÂÆöÂÜç‰æÜË©¶Ë©¶Êñ∞ÁöÑÂÖ±Ëæ¶Á©∫Èñì„ÄÇÈÄôÁ®ÆÂ∞èÂ∞èÁöÑÈÄ£ÁµêÔºåÁ´üÁÑ∂ËÆìÊàë‰ªäÂ§©Ë∂ÖÊúâÁîüÁî¢Âäõ„ÄÇ',
    imgSrc: './img-diary/diary-2.jpg',
    location: 'Ê∏ÖÈÇÅ/ Ê≥∞Âúã',
    date: 'Jun,10 2025',
    liked: false
  },
  {
    id: 3,
    author: 'Elain',
    title: 'üì∑ ‰∏ÄËµ∑Ë∏©ÈªûÔºåÊâæÂà∞‰∫∫ÁîüÁ¨¨‰∏ÄÂºµÊúÉÊÉ≥Ê≤ñÊ¥óÂá∫‰æÜÁöÑÁÖßÁâá',
    content: 'ÈÄôË∂üÊóÖÁ®ãÂéüÊú¨Ê≤íÈ†êË®≠‰ªÄÈ∫º‰∏ªÈ°åÔºåÂè™ÊòØÊÉ≥ÁúãÁúãÊù±Âçó‰∫ûÁöÑÂè¶‰∏ÄÈù¢„ÄÇÁõ¥Âà∞Âú®Âπ≥Âè∞‰∏äÁôº‰∫Ü‰∏ÄÂÄãÊîùÂΩ±Êè™ÂúòÔºåÁ´üÁÑ∂‰æÜ‰∫Ü‰∏âÂÄã‰∫∫ÔºåËÄå‰∏îÂâõÂ•ΩÂÖ®ÊòØÂè∞ÁÅ£‰∫∫„ÄÇ\nÊàëÂÄëÊãøËëóÊâãÊ©üÂíåÂ∫ïÁâáÊ©üÔºåÂú®Ê≤≥ÂÖßË°óÈ†≠‰∫ÇËµ∞„ÄÅÊãçÁÖßÔºå‰∫íÁõ∏Âπ´Â∞çÊñπÊßãÂúñ„ÄÅÁï∂ÊîùÂΩ±Â∏´‰πüÁï∂Ê®°Áâπ„ÄÇÊãçÂÆåÊàëÂÄëÈÇÑÂéªÂêÉ‰∫ÜÁÜ±ÂëºÂëºÁöÑÊ≤≥Á≤âÔºåÂùêÂú®Ë∑ØÈÇäËÅäËµ∑ÂêÑËá™ÁöÑÊïÖ‰∫ã„ÄÇ\nÂõûÂà∞ÊóÖÈ§®ÂæåÊï¥ÁêÜÁÖßÁâáÔºåÊàëÁúãÂà∞ÈÇ£ÂºµÈªÉÊòèÊôÇÂÖâ‰∏ãÔºåÊàëÁ´ôÂú®ÈêµÈÅìÊóÅÁöÑËÉåÂΩ±ÁÖßÔºåÁ´üÁÑ∂ÊÉ≥Ê≤ñÊ¥óÂá∫‰æÜ„ÄÇÈÇ£Áû¨ÈñìÔºåÊóÖÁ®ãÁ™ÅÁÑ∂Êúâ‰∫ÜÈáçÈáèÔºå‰πüÊúâ‰∫ÜÂõûÊÜ∂ÁöÑÂΩ¢ÁãÄ„ÄÇ',
    imgSrc: './img-diary/diary-3.jpg',
    location: 'ÂØåÂúãÂ≥∂/ Ë∂äÂçó',
    date: 'Sep,23 2025',
    liked: false
  },
  {
    id: 4,
    author: 'Elain',
    title: 'üè†ÂêàÁßüÁîüÊ¥ª Day 5ÔºöÂªöÊàøÂ∞çË©±ÊúÄÁôÇÁôí',
    content: 'Âíå‰∏ÄÂÄãÈüìÂúãË®≠Ë®àÂ∏´ÂêàÁßü‰∏ÄÈñìÂÖ©ÊàøÂ∞èÂÖ¨ÂØìÂ∑≤Á∂ì‰∫îÂ§©ÔºåË™™ÂØ¶Ë©±ÔºåË™ûË®Ä‰∏çÈÄöËÆìÊàëÂÄëÂâçÂπæÂ§©ÊúâÈªûÂ∞∑Â∞¨„ÄÇ‰ΩÜÂ•ΩÂú®ÊàëÂÄëÈÉΩÊÑõÂÅöÊó©È§ê„ÄÇ\nÊØèÂ§©Êó©‰∏äÈÉΩÊúÉËº™ÊµÅÂú®ÂªöÊàøÊ∫ñÂÇôÈ£üÁâ©Ôºå‰ªäÂ§©ÊàëÂÅö‰∫ÜÊ≥ïÂºèÂêêÂè∏Ôºå‰ªñÂâáÁÖé‰∫ÜÈüìÂºèÁÖéÈ§Ö„ÄÇ\nÊúÄÊÑèÂ§ñÁöÑÊòØ‰ªñ‰∏ªÂãïÂπ´ÊàëÊ¥óÁ¢óÔºåÁÑ∂ÂæåÈÇÑÁî®ÁøªË≠Ø app Ë∑üÊàëË™™„ÄåÈÄôÂÄãÂæàÂ•ΩÂêÉÔºÅ„ÄçÈÇ£‰∏ÄÂàªÔºåÊàëÁ™ÅÁÑ∂Ë¶∫ÂæóÂ•ΩÊ∫´Êöñ„ÄÇ\nÊàëÂÄë‰∏ç‰∏ÄÂÆöÊúÉÊàêÁÇ∫ÊúãÂèãÔºå‰ΩÜÈÄôÊÆµ„ÄåÊúâË∑ùÈõ¢ÁöÑ‰∫íÂä©Èóú‰øÇ„ÄçÔºåÂú®Áï∞Âú∞ÁöÑÁîüÊ¥ª‰∏≠ÔºåÁ´üÁÑ∂Êàê‰∫ÜÊúÄÁôÇÁôíÁöÑÊó•Â∏∏„ÄÇ',
    imgSrc: './img-diary/diary-4.jpg',
    location: 'ÈáúÂ±±/ ÈüìÂúã',
    date: 'Feb,03 2025',
    liked: false
  },
  {
    id: 5,
    author: 'Ting',
    title: 'üé≤ ‰ªäÂ§©ÂíåÁ∂≤ÂèãÁé©Ê°åÈÅäÂà∞ÂáåÊô®‰∏âÈªû',
    content: 'Êú¨‰æÜÂè™ÊòØÊÉ≥ÊâæÂÄãÂú∞Êñπ chill ‰∏Ä‰∏ãÔºåÁµêÊûú‰∏ÄÈÄ≤ÈñÄÂ∞±Ë¢´ÊãâÈÄ≤‰∏ÄÂ±ÄÁãº‰∫∫ÊÆ∫„ÄÇ‰∏ÄÈñãÂßãÂ§ßÂÆ∂ÈÇÑÂæàÊãòË¨πÔºåÁµêÊûúË∂äÁé©Ë∂äÈñãÔºåÂêµÂà∞ËÄÅÈóÜÈÉΩ‰æÜÁúãÊàëÂÄëÊòØÊÄéÊ®£‰∫Ü„ÄÇ\nÊàëÂæûÊ≤íÊÉ≥ÈÅéÔºåË™ûË®Ä‰∏çÂêå„ÄÅËÉåÊôØ‰∏çÂêåÔºåÈù†‰∏ÄÂ†¥ÈÅäÊà≤Â±ÖÁÑ∂‰πüËÉΩÊãâËøëË∑ùÈõ¢„ÄÇ\nÂõûÂÆ∂ÁöÑË∑Ø‰∏äÊàëÁ´üÁÑ∂ÊúâÈªûÊç®‰∏çÂæóÔºåÈÇÑÂøç‰∏ç‰ΩèÂïè‰ªñÂÄë„ÄåËÅñË™ïÁØÄ‰Ω†ÂÄëÂú®Âì™Ôºü„ÄçÂéü‰æÜË™çË≠òÊúãÂèãÊúâÊôÇ‰∏çÈúÄË¶ÅÁêÜÁî±ÔºåÂè™Ë¶Å‰Ω†È°òÊÑè‰∏ÄËµ∑Áé©„ÄÇ',
    imgSrc: './img-diary/diary-5.png',
    location: 'Ëë°ËêÑÁâô/ ÈáåÊñØÊú¨',
    date: 'Jul,14 2025',
    liked: false
  },
];

const Diary = () => {
  const [showModal, setShowModal] = useState(false);
  const [posts, setPosts] = useState(initialPosts);
  const [newPostTitle, setNewPostTitle] = useState('');
  const [newPostContent, setNewPostContent] = useState('');
  const [newPostImage, setNewPostImage] = useState(null);
  const [imagePreview, setImagePreview] = useState(null);
  const [newPostLocation, setNewPostLocation] = useState('Âè∞Âåó/ Âè∞ÁÅ£');
  const [newPostDate, setNewPostDate] = useState(new Date().toISOString().substring(0, 10));

  const handleOpenModal = () => {
    setShowModal(true);
  };

  const handleCloseModal = () => {
    setShowModal(false);
    setNewPostTitle('');
    setNewPostContent('');
    setNewPostImage(null);
    setImagePreview(null);
    setNewPostLocation('Âè∞Âåó/ Âè∞ÁÅ£');
    setNewPostDate(new Date().toISOString().substring(0, 10));
  };

  const handleImageUpload = (e) => {
    const file = e.target.files[0];
    if (file) {
      setNewPostImage(file);
      setImagePreview(URL.createObjectURL(file));
    }
  };

  const handleRemoveImage = () => {
    setNewPostImage(null);
    setImagePreview(null);
  };

  const handlePublishPost = () => {
    if (!newPostTitle || !newPostContent) {
      alert('Ê®ôÈ°åÂíåÂÖßÂÆπÈÉΩ‰∏çËÉΩÁÇ∫Á©∫ÔºÅ');
      return;
    }

    const newPost = {
      id: Date.now(),
      author: 'Jun cheng',
      title: newPostTitle,
      content: newPostContent,
      imgSrc: imagePreview,
      location: newPostLocation,
      date: formatDate(newPostDate),
      liked: false, // Êñ∞Â¢ûÁöÑÂ±¨ÊÄß
    };

    setPosts([newPost, ...posts]);
    handleCloseModal();
  };

  const handleLike = (postId) => {
    setPosts(posts.map(post => 
      post.id === postId ? { ...post, liked: !post.liked } : post
    ));
  };

  return (
    <main>
      <section className="diaAll">
        <section id='diary-discover'>
          <div className='d-t-title'>
            <h2>ÊºÇÊó•Ë®ò<span>‰∫ûÊ¥≤/Êù±Âçó‰∫û ------------</span></h2>
          </div>
          <section className='diaContent'>
            <div className='diaDrop'>
              <ul>
                <li>‰∫ûÊ¥≤</li><img src="./img-diary/icon-right.png" alt="" />
              </ul>
              <ul>
                <li>Ê≠êÊ¥≤</li><img src="./img-diary/icon-right.png" alt="" />
              </ul>
              <ul>
                <li>ÂåóÁæéÊ¥≤</li><img src="./img-diary/icon-right.png" alt="" />
              </ul>
              <ul>
                <li>‰∏≠ÂçóÁæéÊ¥≤</li><img src="./img-diary/icon-right.png" alt="" />
              </ul>
              <ul>
                <li>ÈùûÊ¥≤</li><img src="./img-diary/icon-right.png" alt="" />
              </ul>
              <ul>
                <li>Â§ßÊ¥ãÊ¥≤</li><img src="./img-diary/icon-right.png" alt="" />
              </ul>
            </div>
            <section id='diary-article'>
              <section className="diaPost" onClick={handleOpenModal}>
                <div className="member"></div>
                <p className="input-placeholder">Êñ∞ÈÆÆ‰∫ã?</p>
                <button className="share-btn">
                  <img src="./img-diary/open-in-new.svg" alt="Share" />
                </button>
              </section>

              {showModal && (
                <div className="post-modal-overlay">
                  <div className="post-modal-content" onClick={(e) => e.stopPropagation()}>
                    <div className="modal-header">
                      <div className="member-avatar"></div>
                      <span className="member-name">Jun cheng</span>
                      {/* Êñ∞Â¢ûÈóúÈñâÊåâÈàï */}
                      <button className="close-btn" onClick={handleCloseModal}>&times;</button>
                    </div>
                    {imagePreview && (
                      <div className="image-preview" onClick={() => document.getElementById('file-upload').click()}>
                        <img src={imagePreview} alt="È†êË¶Ω" />
                        <button className="remove-image-btn" onClick={(e) => { e.stopPropagation(); handleRemoveImage(); }}>&times;</button>
                      </div>
                    )}
                    <textarea
                      placeholder="Ê®ôÈ°å"
                      className="post-title"
                      value={newPostTitle}
                      onChange={(e) => setNewPostTitle(e.target.value)}
                    ></textarea>
                    <textarea
                      placeholder="Êúâ‰ªÄÈ∫º‰∫ãÊÉ≥ÂàÜ‰∫´Âà∞ÊºÇÊó•Ë®ò?"
                      className="post-textarea"
                      value={newPostContent}
                      onChange={(e) => setNewPostContent(e.target.value)}
                    ></textarea>
                    <div className="modal-footer">
                      <div className="left-controls">
                        <label htmlFor="file-upload" className="upload-btn">
                          <img src="./img-diary/upphoto.png" alt="‰∏äÂÇ≥ÁÖßÁâá" /><span>‰∏äÂÇ≥ÁÖßÁâá</span>
                        </label>
                        <input id="file-upload" type="file" accept="image/*" onChange={handleImageUpload} style={{ display: 'none' }} />
                        <div className="location-date">
                          <div className="location-icon">
                            <img src="./img-Home/location.svg" alt="‰ΩçÁΩÆÂúñÁ§∫" />
                            <input
                              type="text"
                              className="location-input"
                              value={newPostLocation}
                              onChange={(e) => setNewPostLocation(e.target.value)}
                            />
                            
                          </div>
                          <input
                            type="date"
                            className="date-input"
                            value={newPostDate}
                            onChange={(e) => setNewPostDate(e.target.value)}
                          />

                        </div>
                      </div>
                      <button className="publish-btn" onClick={handlePublishPost}>ÁôºÂ∏É</button>
                    </div>
                  </div>
                </div>
              )}


              {posts.map(post => (
                <Link to="/diary2" key={post.id}>
                  <section className='diaArticleSection1'>
                    {post.imgSrc && (
                      <div className='p1-sel'>
                        <figure className='dia-p1'><img src={post.imgSrc} alt="" /></figure>
                      </div>
                    )}
                    <article className='diaArticle1'>
                      <div className='d-member'>
                        <div></div>
                        <p>{post.author}</p>
                      </div>
                      <div className='d-text-card' >
                        <div className='d-text'>
                          <p className='d-tit'>{post.title}</p>
                          <p className='d-word'>
                            {post.content.split('\n').map((line, index) => (
                              <React.Fragment key={index}>
                                {line}
                                {index < post.content.split('\n').length - 1 && <br />}
                              </React.Fragment>
                            ))}
                          </p>
                        </div>
                        <div className='d-sign'>
                          <div className='d-locaion'>
                            <figure><img src="./img-Home/location.svg" alt="" /></figure>
                            <p className='h-d-loc'>{post.location}</p>
                          </div>
                          <p className='h-d-date'>{post.date}</p>
                          <figure className='like-button' onClick={(e) => { e.preventDefault(); handleLike(post.id); }}>
                            <img src={post.liked ? "./img-diary/heart.svg" : "./img-Home/heart.svg"} alt="ÊÑõÂøÉÂúñÁ§∫" />
                          </figure>
                          <figure><img src="./img-Home/chat.svg" alt="" /></figure>
                          <figure><img src="./img-Home/save.svg" alt="" /></figure>
                        </div>
                      </div>
                    </article>
                  </section>
                </Link>
              ))}
            </section>
          </section>
        </section>
        <figure className='dia-p1'><img src="./img-diary/b-photo.png" alt="" /></figure>
      </section>
    </main>
  );
};

export default Diary;